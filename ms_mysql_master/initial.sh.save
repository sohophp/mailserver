#!/bin/bash
#################
# 初始化MySQL数据库
################

# 预设参数
MYSQL_MASTER_ROOT_PASSWORD=123456
MYSQL_MASTER_HOST=localhost
MYSQL_MASTER_PORT=3306
MYSQL_MASTER_DATABASE=postfix
MYSQL_MASTER_USER=postfix
MYSQL_MASTER_PASSWORD=123456 

base=$(cd "$(dirname $0)/..";pwd)
# 导入设定参数
source $base'/.env';

# 日志时间
TIMESTAMP=`date +%Y%m%d%H%M%S`

# 日志文件名
log=$base'/log/mysql_master_initial.log'
tmp_log=$base'/log/tmp.log'
if [ ! -f "$tmp_log" ];
then 
touch $tmp_log
fi

mycnf=$base'/ms_mysql_master/my.cnf'

echo "
[client]
host=$MYSQL_MASTER_HOST
user=root
port=$MYSQL_MASTER_PORT
password=$MYSQL_MASTER_ROOT_PASSWORD
">$mycnf

# 写入日志
# echo "Start execute sql statement at `date`." >> $log 
echo "Start execute sql statement at `date`."
# 执行初始 SQL
mysql --defaults-extra-file=$mycnf --tee="$tmp_log" -e" 
DROP DATABASE IF EXISTS $MYSQL_MASTER_DATABASE ;
CREATE DATABASE $MYSQL_MASTER_DATABASE CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci;
USE $MYSQL_MASTER_DATABASE;
-- #lt 5.7
-- #DROP USER IF EXISTS '$MYSQL_MASTER_USER'@'%';
GRANT USAGE ON *.* TO '$MYSQL_MASTER_USER'@'%' IDENTIFIED BY '123456' ;
DROP USER '$MYSQL_MASTER_USER'@'%';
FLUSH PRIVILEGES;
CREATE USER '$MYSQL_MASTER_USER'@'%' IDENTIFIED  BY '$MYSQL_MASTER_PASSWORD';
GRANT USAGE,SELECT,INSERT,UPDATE,DELETE ON $MYSQL_MASTER_DATABASE.* TO '$MYSQL_MASTER_USER'@'%';
FLUSH PRIVILEGES;

-- CREATE TABLE IF NOT EXISTS domains (
--  domain varchar(50) NOT NULL,
--  PRIMARY KEY (domain)
-- );

-- CREATE TABLE IF NOT EXISTS forwardings (
--  source varchar(80) NOT NULL,
--  destination TEXT NOT NULL,
--  PRIMARY KEY(source)
-- );

-- CREATE TABLE IF NOT EXISTS users (
-  email varchar(80) NOT NULL,
  password varchar(64) NOT NULL,
  quota int(10) default '104857600',
  PRIMARY KEY (email)
);

CREATE TABLE IF NOT EXISTS transport (
  domain varchar(128) NOT NULL default '',
  transport varchar(128) NOT NULL default '',
  UNIQUE KEY domain (domain)
);

";

rm $mycnf; 
# echo "below is output result.">>${log};
echo "below is output result." ;   
# cat $tmp_log>>${log};
cat $tmp_log;
# echo "script executed successful.">>${log};
echo "script executed successful." ;
# echo -e "\n">>${log};
if [ -f "$tmp_log" ];then rm $tmp_log;fi;
if [ -f "$log" ];then rm $log; fi;
